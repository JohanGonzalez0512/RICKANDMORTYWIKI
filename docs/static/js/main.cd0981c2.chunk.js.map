{"version":3,"sources":["components/Search.js","components/CharacterItem.js","helpers/getCharacters.js","components/CharacterGrid.js","hooks/useFetch.js","RickAndMortyApp.js","index.js"],"names":["Search","changeCharacter","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","id","type","aria-label","aria-describedby","onChange","target","value","CharacterItem","cha","src","image","alt","name","status","species","origin","location","getCharacters","a","url","fetch","peticion","json","results","characters","map","CharacterGrid","data","loading","state","setState","useEffect","then","catch","err","useFetch","key","RickAndMortyApp","character","setCharacter","ReactDOM","render","document","getElementById"],"mappings":"yJAEaA,EAAS,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAAqB,EAELC,mBAAS,gBAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAYzC,OACQ,0BAAMC,UAAU,mBAAmBC,SALtB,SAACC,GAClBA,EAAEC,iBACFP,EAAgBE,KAIR,yBAAKE,UAAU,uBACX,0BAAMA,UAAU,mBAAmBI,GAAG,6BAAtC,YAEJ,2BACIC,KAAK,OACLL,UAAU,eACVM,aAAW,uBACXC,mBAAiB,4BACjBC,SAlBU,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACxBV,EAAcU,EAAOC,YCLhBC,EAAgB,SAAC,GAAW,IAAVC,EAAS,EAATA,IAC3B,OACI,yBAAKZ,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,YACX,yBAAKa,IAAKD,EAAIE,MAAOd,UAAU,WAAWe,IAAI,oBAElD,yBAAKf,UAAU,sBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcY,EAAII,MAChC,uBAAGhB,UAAU,aACT,sCADJ,IACoBY,EAAIK,OADxB,KACiC,6BAC7B,sCAFJ,IAEoBL,EAAIM,QAFxB,KAEkC,6BAC9B,sCAHJ,IAGoBN,EAAIO,OAHxB,KAGiC,6BAC7B,wCAJJ,IAIsBP,EAAIQ,SAJ1B,KAIqC,mC,uBCdhDC,EAAa,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DACnBC,EADmB,0DACsCP,GADtC,SAEFQ,MAAMD,GAFJ,cAEnBE,EAFmB,gBAGCA,EAASC,OAHV,uBAGjBC,EAHiB,EAGjBA,QACFC,EAAaD,EAAQE,KAAI,SAAAjB,GAC3B,MAAO,CACHR,GAAIQ,EAAIR,GACRY,KAAMJ,EAAII,KACVC,OAAQL,EAAIK,OACZC,QAASN,EAAIM,QACbC,OAAQP,EAAIO,OAAOH,KACnBI,SAAUR,EAAIQ,SAASJ,KACvBF,MAAOF,EAAIE,UAZM,kBAgBlBc,GAhBkB,4CAAH,sDCEbE,EAAgB,SAAC,GAAiB,IAAD,IAAdd,KAAc,ECDtB,WAAc,IAAbA,EAAY,uDAAP,GAAO,EACPnB,mBAAS,CAAEkC,KAAM,GAAIC,SAAS,IADvB,mBAC1BC,EAD0B,KACnBC,EADmB,KAkBjC,OAfAC,qBAAU,WACNd,EAAcL,GACToB,MAAK,SAAAL,GACFG,EAAS,CACLH,KAAMA,EACNC,SAAS,OAGhBK,OAAM,SAAAC,GACHJ,EAAS,CACLH,KAAM,KACNC,SAAS,SAGtB,CAAChB,IACGiB,EDf2BM,MAFQ,MAAT,GAAS,GAE9BX,EAF8B,EAEnCG,KAAgBC,EAFmB,EAEnBA,QAEvB,OACI,wCAAKA,GAAY,yBAAKhC,UAAU,oBAAf,eACjB,yBAAKA,UAAU,gCAEK,OAAb4B,EAEKA,EAAWC,KAAI,SAAAjB,GAAG,OAClB,kBAAC,EAAD,CACIA,IAAMA,EACN4B,IAAK5B,EAAIR,QAGf,yBAAKJ,UAAU,uBAAf,2BEhBLyC,EAAkB,WAAO,IAAD,EACC5C,mBAAS,IADV,mBAC1B6C,EAD0B,KACfC,EADe,KAIjC,OACI,yBAAK3C,UAAU,OACX,8CACA,6BACA,kBAAC,EAAD,CAAQJ,gBAAiB+C,IACzB,kBAAC,EAAD,CAAe3B,KAAM0B,MCVjCE,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cd0981c2.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const Search = ({changeCharacter}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"initialState\");\r\n    \r\n    const handleInputChange = ({target}) =>{\r\n        setInputValue(target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        changeCharacter(inputValue)\r\n    }\r\n    return (\r\n            <form className=\"input-group mb-3\" onSubmit={handleSubmit}>\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Nombre:</span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"Sizing example input\"\r\n                    aria-describedby=\"inputGroup-sizing-default\"\r\n                    onChange={handleInputChange}\r\n                    />\r\n            </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CharacterItem = ({cha}) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={cha.image} className=\"card-img\" alt=\"Rick and Morty\" />\r\n                </div>\r\n                <div className=\"col-md-8 textCards\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{cha.name}</h5>\r\n                        <p className=\"card-text\">\r\n                            <b>Status:</b> {cha.status}  <br />\r\n                            <b>Specie:</b> {cha.species}  <br />\r\n                            <b>Origin:</b> {cha.origin}  <br />\r\n                            <b>Location:</b> {cha.location}  <br />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getCharacters = async (name) => {\r\n    const url = `https://rickandmortyapi.com/api/character/?name=${name}`;\r\n    const peticion = await fetch(url);\r\n    const { results } = await peticion.json();\r\n    const characters = results.map(cha => {\r\n        return {\r\n            id: cha.id,\r\n            name: cha.name,\r\n            status: cha.status,\r\n            species: cha.species,\r\n            origin: cha.origin.name,\r\n            location: cha.location.name,\r\n            image: cha.image,\r\n        }\r\n    });\r\n\r\n    return characters;\r\n\r\n};\r\n","import React from 'react'\r\nimport { CharacterItem } from './CharacterItem'\r\nimport { useFetch } from '../hooks/useFetch'\r\n\r\nexport const CharacterGrid = ({ name='' }) => {\r\n\r\n    const {data:characters,loading} = useFetch(name)\r\n\r\n    return (\r\n        <> {(loading) && <div className=\"alert alert-info\"> Loading...</div>}\r\n        <div className=\"row row-cols-1 row-cols-md-2\">\r\n\r\n            { (characters!==null)\r\n                ?  \r\n                    characters.map(cha => (\r\n                    <CharacterItem \r\n                        cha= {cha}\r\n                        key={cha.id}\r\n                    />\r\n                    ))\r\n                : <div className=\"alert alert-warning\"> Character not found</div>\r\n                    \r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getCharacters } from \"../helpers/getCharacters\";\r\n\r\nexport const useFetch = (name=\"\") => {\r\n    const [state, setState] = useState({ data: [], loading: true });\r\n    \r\n    useEffect(() => {\r\n        getCharacters(name)\r\n            .then(data => {\r\n                setState({\r\n                    data: data,\r\n                    loading: false,\r\n                    });\r\n            })\r\n            .catch(err =>{\r\n                setState({\r\n                    data: null,\r\n                    loading: false,\r\n                    });\r\n            })\r\n    }, [name]);\r\n    return state;\r\n}       \r\n","import React, { useState } from 'react'\r\nimport { Search } from './components/Search';\r\nimport { CharacterGrid } from './components/CharacterGrid';\r\n\r\nexport const RickAndMortyApp = () => { \r\n    const [character, setCharacter] = useState(\"\");\r\n   \r\n   \r\n    return (\r\n        <div className=\"m-5\">\r\n            <h1>Rick and morty</h1>\r\n            <hr />\r\n            <Search changeCharacter={setCharacter}/>\r\n            <CharacterGrid name={character} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { RickAndMortyApp } from './RickAndMortyApp';\r\nReactDOM.render(\r\n \r\n    <RickAndMortyApp />,\r\n \r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}